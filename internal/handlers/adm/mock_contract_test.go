// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package adm is a generated GoMock package.
package adm

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	staff "github.com/s21platform/staff-service/pkg/staff"
)

// MockStaffClient is a mock of StaffClient interface.
type MockStaffClient struct {
	ctrl     *gomock.Controller
	recorder *MockStaffClientMockRecorder
}

// MockStaffClientMockRecorder is the mock recorder for MockStaffClient.
type MockStaffClientMockRecorder struct {
	mock *MockStaffClient
}

// NewMockStaffClient creates a new mock instance.
func NewMockStaffClient(ctrl *gomock.Controller) *MockStaffClient {
	mock := &MockStaffClient{ctrl: ctrl}
	mock.recorder = &MockStaffClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStaffClient) EXPECT() *MockStaffClientMockRecorder {
	return m.recorder
}

// CreateStaff mocks base method.
func (m *MockStaffClient) CreateStaff(ctx context.Context, in *staff.CreateIn) (*staff.Staff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStaff", ctx, in)
	ret0, _ := ret[0].(*staff.Staff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStaff indicates an expected call of CreateStaff.
func (mr *MockStaffClientMockRecorder) CreateStaff(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStaff", reflect.TypeOf((*MockStaffClient)(nil).CreateStaff), ctx, in)
}

// ListStaff mocks base method.
func (m *MockStaffClient) ListStaff(ctx context.Context, in *staff.ListIn) (*staff.ListOut, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListStaff", ctx, in)
	ret0, _ := ret[0].(*staff.ListOut)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStaff indicates an expected call of ListStaff.
func (mr *MockStaffClientMockRecorder) ListStaff(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStaff", reflect.TypeOf((*MockStaffClient)(nil).ListStaff), ctx, in)
}

// StaffLogin mocks base method.
func (m *MockStaffClient) StaffLogin(ctx context.Context, in *staff.LoginIn) (*staff.LoginOut, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StaffLogin", ctx, in)
	ret0, _ := ret[0].(*staff.LoginOut)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StaffLogin indicates an expected call of StaffLogin.
func (mr *MockStaffClientMockRecorder) StaffLogin(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StaffLogin", reflect.TypeOf((*MockStaffClient)(nil).StaffLogin), ctx, in)
}
